import type { NextPage } from 'next';
import Head from 'next/head';
import {
	AppShell,
	Navbar,
	Header,
	Title,
	Text,
	ThemeIcon,
	Button,
	Center,
} from '@mantine/core';
import { BiBook, BiUser, BiTime, BiUserCircle } from 'react-icons/bi';

import styles from '../styles/Home.module.scss';
import {useEffect, useState} from 'react';

import Books from '../components/Books';
import Profile from '../components/Profile';
import Timer from "../components/Timer";
import {useSelector} from "react-redux";
import {useRouter} from "next/router";
import Friends from "../components/Friends";

enum Option {
	books,
	friends,
	timer,
	profile,
}

const Home: NextPage = () => {
	// #TODO: Interface for user
	const user: any = useSelector<any>((state) => state.user)
	const router = useRouter()

	useEffect(() => {
		if(user.userKey.length === 0) {
			router.push("/login")
		}
	}, [])
	const [menuOption, setMenuOption] = useState<Option>(Option.profile);
	return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className={styles.main}>
				<AppShell
					padding="md"
					navbar={
						<Navbar
							width={{ base: 250 }}
							height={'90vh'}
							padding="sm"
						>
							<Navbar.Section>
							<Button
								variant={
									menuOption == Option.books
										? 'light'
										: 'subtle'
								}
								color="gray"
								className={styles.menuOption}
								onClick={() => {
									setMenuOption(Option.books);
								}}
							>
								<ThemeIcon
									className={styles.icon}
									variant="light"
								>
									<BiBook size="20px" />
								</ThemeIcon>

								<Text size="sm" weight={'400'} color="black">
									Books
								</Text>
							</Button>
								</Navbar.Section>
							<Navbar.Section>

								<Button
									variant={
										menuOption == Option.friends
											? 'light'
											: 'subtle'
									}
									color="gray"
									className={styles.menuOption}
									onClick={() => {
										setMenuOption(Option.friends);
									}}
								>
									<ThemeIcon
										className={styles.icon}
										variant="light"
										color="cyan"
									>
										<BiUser size="20px" />
									</ThemeIcon>

									<Text size="sm" weight={'400'} color="black">
										Friends
									</Text>
								</Button>
							</Navbar.Section>
							<Navbar.Section>

							<Button
								variant={
									menuOption == Option.timer
										? 'light'
										: 'subtle'
								}
								color="gray"
								className={styles.menuOption}
								onClick={() => {
									setMenuOption(Option.timer);
								}}
							>
								<ThemeIcon
									className={styles.icon}
									variant="light"
									color="green"
								>
									<BiTime size="20px" />
								</ThemeIcon>

								<Text size="sm" weight={'400'} color="black">
									Timer
								</Text>
							</Button>
							</Navbar.Section>
							<Navbar.Section>
							<Button
								variant={
									menuOption == Option.profile
										? 'light'
										: 'subtle'
								}
								color="gray"
								className={styles.menuOption}
								onClick={() => {
									setMenuOption(Option.profile);
								}}
							>
								<ThemeIcon
									className={styles.icon}
									variant="light"
									color="grape"
								>
									<BiUserCircle size="20px" />
								</ThemeIcon>

								<Text size="sm" weight={'400'} color="black">
									Your Profile
								</Text>
							</Button>
							</Navbar.Section>
						</Navbar>
					}
					header={
						<Header height={'7vh'} padding="xs" style={{paddingLeft:"25px"}}>
							<Center inline>
								<Title order={2}>book.io</Title>
							</Center>
						</Header>
					}
				>
					{menuOption === Option.books && <Books />}
					{menuOption === Option.friends && <Friends/>}
					{menuOption === Option.timer && <Timer/>}
					{menuOption === Option.profile && <Profile />}
				</AppShell>
			</div>
		</div>
	);
};

export default Home;
